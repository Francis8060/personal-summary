import{_ as t,M as c,p as o,q as p,R as n,t as a,N as e,a1 as l}from"./framework-5866ffd3.js";const i={},r=l(`<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h1><h2 id="入门" tabindex="-1"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h2><h3 id="字符组" tabindex="-1"><a class="header-anchor" href="#字符组" aria-hidden="true">#</a> 字符组</h3><p>字符组<code>[]</code>允许匹配一组可能出现的字符</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[Jj]ava</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// 匹配     Java8.0、java8.0</span>
<span class="token comment">// 不匹配   jjva、Javv</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配多个单词</span>
<span class="token operator">/</span><span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>ub<span class="token punctuation">[</span>ye<span class="token punctuation">]</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     ruby、rube、Ruby on Rails、Rube on Rails</span>
<span class="token comment">// 不匹配   rubb on rails、ruyye on rails、ruee、hello world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="区间" tabindex="-1"><a class="header-anchor" href="#区间" aria-hidden="true">#</a> 区间</h3><p>在字符组中使用连字符<code>-</code>代表区间</p><ul><li>匹配任意数字<code>[0-9]</code></li><li>匹配所有小写字母<code>[a-z]</code></li><li>匹配所有大写字母<code>[A-Z]</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配数据所有的数字、小写字母和大写字母</span>
<span class="token operator">/</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span>9a<span class="token operator">-</span>zA<span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     abcdefg、012345678、987654321、ABCDEFG</span>
<span class="token comment">// 不匹配   +_)*^$%、&lt;&gt;?:&quot;{}、（）。，/、?&gt;&lt;,.&gt;()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊字符" tabindex="-1"><a class="header-anchor" href="#特殊字符" aria-hidden="true">#</a> 特殊字符</h3><p>使用<code>\\</code>对特殊字符进行转义</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配特殊字符</span>
<span class="token operator">/</span><span class="token punctuation">[</span>\\<span class="token operator">-</span>\\<span class="token punctuation">[</span>\\<span class="token punctuation">]</span>\\<span class="token punctuation">(</span>\\<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     []、-----、()、[]</span>
<span class="token comment">// 不匹配   123456789、Abcdefg、code123、0codejn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="取反" tabindex="-1"><a class="header-anchor" href="#取反" aria-hidden="true">#</a> 取反</h3><p>字符组开头使用<code>^</code>进行取反，就是匹配特定字符之外的任意字符</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配\`爱\`后面不包含\`你\`的数据</span>
<span class="token operator">/</span>爱<span class="token punctuation">[</span><span class="token operator">^</span>你<span class="token punctuation">]</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     爱吗、爱哦、爱我自己</span>
<span class="token comment">// 不匹配   我爱你、爱你、不爱你</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配不包含小写字母的数据</span>
<span class="token operator">/</span><span class="token punctuation">[</span><span class="token operator">^</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     01234、1234567890、CODEJIAONANG123、-*/124566ABV</span>
<span class="token comment">// 不匹配   ab、abcd、pythonregext</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="快捷方式" tabindex="-1"><a class="header-anchor" href="#快捷方式" aria-hidden="true">#</a> 快捷方式</h3><ul><li>快捷匹配数字<code>\\d</code>和单词字符<code>\\w</code><ul><li>\\w 与任意单词字符匹配，任意单词字符标识<code>[0-9]</code>、<code>[a-z]</code>、<code>[A-Z]</code>、<code>_</code></li><li>\\d 与任意数字匹配<code>[0-9]</code></li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\w</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// 匹配     master、code、hello world、987654321</span>
<span class="token comment">// 不匹配   $#$%、&lt;&gt;()、//\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>匹配空白<code>\\s</code></li></ul><p><code>\\s</code>可以匹配空白字符，比如空格，tab、换行等</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">code\\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token comment">// 匹配     code 、code jiaonang、code jiaonang</span>
<span class="token comment">// 不匹配   codeasd/、codejiaonangA$、CODEINFO</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>单词边界<code>\\b</code></li></ul><p><code>\\b</code> 匹配的是单词的边界</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>\\bcode\\b

<span class="token comment">// 匹配     code、code jiaonang、code jiaonang</span>
<span class="token comment">// 不匹配   codeasd/、codejiaonangA$、CODEINFO</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>快捷方式取反</p><ul><li><code>\\w</code>取反<code>\\W</code></li><li><code>\\s</code>取反<code>\\S</code></li><li><code>\\d</code>取反<code>\\D</code></li></ul></li><li><p>开始<code>^</code>和结束<code>$</code></p></li></ul><p><code>^</code>表示字符的开始，<code>$</code>表示字符的结束</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">OS$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token comment">// 匹配     windows OS、Mac OS、LinuxOS、AppleOS</span>
<span class="token comment">// 不匹配   OSopen、apple os</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>任意字符<code>.</code></li></ul><p><code>.</code>字符代表匹配任何单个字符，它只能出现在方括号以外，<code>.</code>字符只有一个不能匹配的字符，也就是换行符<code>\\n</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配任意字母之后是ar的字符串</span>
<span class="token operator">/</span><span class="token punctuation">.</span>ar<span class="token operator">/</span>g

<span class="token comment">// 匹配     ear、car、parked、garage</span>
<span class="token comment">// 不匹配   aer、acer、acer</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可选字符<code>?</code></li></ul><p><code>?</code>期望该字符出现零次或一次</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配 favorite和favourite</span>
<span class="token operator">/</span>favou<span class="token operator">?</span>rite<span class="token operator">/</span>g

<span class="token comment">// 匹配     favorite、favourite</span>
<span class="token comment">// 不匹配   favo、favrite、favouite</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重复" tabindex="-1"><a class="header-anchor" href="#重复" aria-hidden="true">#</a> 重复</h3><p>一个字符组后加上{N} 就可以表示在它之前的字符组出现N次</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配所有的电话号码</span>
<span class="token operator">/</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token operator">-</span>\\d<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     010-88480、030-12345、030-98788</span>
<span class="token comment">// 不匹配   20-66666、01-72813、123-123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重复区间<code>{M, N}</code></li></ul><p>M是下界而N是上界</p><blockquote><p>\\d{3,4} 既可以匹配3个数字也可以匹配4个数字，不过当有4个数字的时候，优先匹配的是4个数字，这是因为正则表达式默认是<strong>贪婪模式</strong>，即尽可能的匹配更多字符，而要使用非贪婪模式，我们要在表达式后面加上<code>?</code>号</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{3,4}?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>


<span class="token comment">// 0731  匹配到073</span>
<span class="token comment">// 073   匹配搭配073</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>开闭区间</li></ul><p><code>\\d{1,}</code>闭区间不写即可表示匹配一个或无数个 - <code>+</code>等价于<code>{1,}</code> - <code>*</code>等价于<code>{0,}</code> - <code>?</code>等价于<code>{0,1}</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配以f开头的数据</span>
<span class="token operator">/</span><span class="token operator">^</span>f\\w<span class="token operator">+</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     f0asd...a123---、food、father</span>
<span class="token comment">// 不匹配   f、brather、arathef、brathef</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配以 http开头，以/结尾的所有数据</span>
<span class="token operator">/</span><span class="token operator">^</span>https<span class="token operator">?</span><span class="token operator">:</span>\\<span class="token operator">/</span>\\<span class="token operator">/</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// 匹配     https://code.com/、http://codejn/、http://google.com/</span>
<span class="token comment">// 不匹配   http:jn/code、master/、http、google.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h2><h3 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组<code>()</code></h3><p>将表达式分组的机制，当使用分组时，除了获得整个匹配。还能够在匹配中选择每一个分组，分组有一个重要功能<strong>捕获数据</strong>,使用分组可以提取数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 0731-8825951</span>
<span class="token operator">/</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">/</span>g

<span class="token comment">// 捕获两段数据 (\\d{3}):0731、(\\d{7}):8825951</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 提取学号</span>

<span class="token comment">// 需要匹配 2019-5013-08、2019 5013 08、2019501308。 需要提取的2019 5013 08</span>
<span class="token operator">/</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span>\\<span class="token operator">-</span>\\s<span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span>\\<span class="token operator">-</span>\\s<span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分组或者条件<code>|</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 提取所有的视频文件的后缀</span>


<span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">.</span>mp4<span class="token operator">|</span><span class="token punctuation">.</span>avi<span class="token operator">|</span><span class="token punctuation">.</span>wmv<span class="token operator">|</span><span class="token punctuation">.</span>rmvb<span class="token punctuation">)</span><span class="token operator">/</span>g

<span class="token comment">// 1.avi    =&gt;  .avi</span>
<span class="token comment">// abc.mp4  =&gt;  .mp4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>非捕获分组<code>(?:表达式)</code>不会捕获表达式中的数据</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 提取目标数据中的电话号码</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span>tel<span class="token operator">|</span>\\d<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span>\\<span class="token operator">-</span><span class="token operator">:</span><span class="token punctuation">]</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">/</span>g

<span class="token comment">// 01-75855     =&gt;  75855</span>
<span class="token comment">// 0731-75855   =&gt;  75855</span>
<span class="token comment">// 12345-75855  =&gt;  75855 </span>
<span class="token comment">// tel:75855    =&gt;  75855</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 提取年月日的数据</span>
<span class="token operator">/</span><span class="token punctuation">(</span>\\d<span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span>\\<span class="token operator">-</span><span class="token punctuation">.</span>\\s\\<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">]?(\\d{1,2})[\\-.\\s\\/]?(\\d{1,2})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// 2020-01-02   =&gt; 2020 01 02</span>
<span class="token comment">// 2020-1-2     =&gt; 2020 1 2</span>
<span class="token comment">// 2020.01.02   =&gt; 2020 01 02</span>
<span class="token comment">// 2020 01 02   =&gt; 2020 01 02</span>
<span class="token comment">// 2020 1 2     =&gt; 2020 1 2</span>
<span class="token comment">// 20200102     =&gt; 2020 01 02</span>
<span class="token comment">// 2020/01/02   =&gt; 2020 01 02</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>分组回溯引用</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 0123&lt;font&gt;提示&lt;/font&gt;abcd </span>

<span class="token operator">/</span><span class="token operator">&lt;</span>\\w<span class="token operator">+</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">?</span><span class="token operator">&lt;</span>\\<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\w+&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// 0123&lt;font&gt;提示&lt;/bar&gt;abcd   这个也能匹配到</span>

<span class="token operator">/</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>\\w<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">?</span><span class="token operator">&lt;</span>\\<span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\1&gt;</span><span class="token regex-delimiter">/</span></span>  <span class="token comment">// \\1就是对前面分组的引用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配符合 ab ba 这种关系的单词</span>
<span class="token operator">/</span><span class="token punctuation">(</span>\\w<span class="token punctuation">)</span><span class="token punctuation">(</span>\\w<span class="token punctuation">)</span>\\<span class="token number">2</span>\\<span class="token number">1</span><span class="token operator">/</span>g

<span class="token comment">// 匹配     abccba、allagmatic、otto、asffs</span>
<span class="token comment">// 不匹配   aaruria、cffusive</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="断言" tabindex="-1"><a class="header-anchor" href="#断言" aria-hidden="true">#</a> 断言</h3><p>先行断言和后行断言为环视，也有人叫预搜索。先行断言从左往右看，后行断言从右往左看</p><ul><li>正向先行断言<code>(?=表达式)</code>, 指在某个位置向右看，表示所在位置右侧必须能匹配表达式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 我喜欢你 我喜欢 我喜欢我 喜欢 喜欢你</span>
<span class="token comment">// 如果要取出喜欢两个字，要求这个喜欢后面有你，这个时候就要这么写：</span>
<span class="token operator">/</span><span class="token function">喜欢</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span>你<span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 提取包含至少一个大小写字母的字符串</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">?</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token operator">-</span><span class="token constant">Z</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>反向先行断言<code>(?!表达式)</code>，指在某个位置向右看，表示所在位置右侧不能出现表达式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 我喜欢你 我喜欢 我喜欢我 喜欢 喜欢你</span>
<span class="token comment">// 如果要取出喜欢两个字，要求这个喜欢后面没有你，这个时候就要这么写：</span>
<span class="token operator">/</span><span class="token function">喜欢</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>你<span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配不是qq邮箱的数据</span>
<span class="token operator">/</span>@<span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>qq<span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 匹配除&lt;p&gt;或&lt;/p&gt;之外的所有标签</span>

<span class="token operator">/</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">&lt;</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\1&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>

<span class="token comment">// 匹配     &lt;div&gt;&lt;/div&gt;、&lt;h1&gt;&lt;/h1&gt;</span>
<span class="token comment">// 不匹配   &lt;p&gt;&lt;/p&gt;、&lt;p&gt;code&lt;/p&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>正向后行断言<code>(?&lt;=)</code>，指在某个位置向左看，表示所在位置左侧必须能匹配表达式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 我喜欢你 我喜欢 我喜欢我 喜欢 喜欢你</span>
<span class="token comment">// 如果要取出喜欢两个字，要求喜欢的前面有我，后面有你，这个时候就要这么写</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;=</span>我<span class="token punctuation">)</span><span class="token function">喜欢</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">=</span>你<span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>反向后行断言<code>(?&lt;!)</code>，指在某个位置向左看，表示所在位置左侧不能匹配表达式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 如果要取出喜欢两个字，要求喜欢的前面没有我，后面没有你</span>
<span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;</span><span class="token operator">!</span>我<span class="token punctuation">)</span><span class="token function">喜欢</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">!</span>你<span class="token punctuation">)</span><span class="token operator">/</span>g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><table><thead><tr><th style="text-align:center;">实例</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>[Pp]ython</code></td><td style="text-align:center;">匹配 “Python” 或 “python”</td></tr><tr><td style="text-align:center;"><code>rub[ye]</code></td><td style="text-align:center;">匹配 “ruby” 或 “rube”</td></tr><tr><td style="text-align:center;"><code>[abcdef]</code></td><td style="text-align:center;">匹配中括号内的任意一个字母</td></tr><tr><td style="text-align:center;"><code>[0-9]</code></td><td style="text-align:center;">匹配任何数字。类似于 [0123456789]</td></tr><tr><td style="text-align:center;"><code>[a-z]</code></td><td style="text-align:center;">匹配任何小写字母</td></tr><tr><td style="text-align:center;"><code>[A-Z]</code></td><td style="text-align:center;">匹配任何大写字母</td></tr><tr><td style="text-align:center;"><code>[a-zA-Z0-9]</code></td><td style="text-align:center;">匹配任何字母及数字</td></tr><tr><td style="text-align:center;"><code>[^au]</code></td><td style="text-align:center;">除了au字母以外的所有字符</td></tr><tr><td style="text-align:center;"><code>[^0-9]</code></td><td style="text-align:center;">匹配除了数字外的字符</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">实例</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>.</code></td><td style="text-align:center;">匹配除 “\\n” 之外的任何单个字符。要匹配包括 ‘\\n’ 在内的任何字符，请使用 ‘[.\\n]’ 的模式</td></tr><tr><td style="text-align:center;"><code>?</code></td><td style="text-align:center;">匹配一个字符零次或一次，另一个作用是非贪婪模式</td></tr><tr><td style="text-align:center;"><code>+</code></td><td style="text-align:center;">匹配1次或多次</td></tr><tr><td style="text-align:center;"><code>*</code></td><td style="text-align:center;">匹配0次或多次</td></tr><tr><td style="text-align:center;"><code>\\b</code></td><td style="text-align:center;">匹配一个长度为0的子串</td></tr><tr><td style="text-align:center;"><code>\\d</code></td><td style="text-align:center;">匹配一个数字字符。等价于[0-9]</td></tr><tr><td style="text-align:center;"><code>\\D</code></td><td style="text-align:center;">匹配一个非数字字符。等价于[^0-9]</td></tr><tr><td style="text-align:center;"><code>\\s</code></td><td style="text-align:center;">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [\\f\\n\\r\\t\\v]</td></tr><tr><td style="text-align:center;"><code>\\S</code></td><td style="text-align:center;">匹配任何非空白字符。等价于 [^\\f\\n\\r\\t\\v]</td></tr><tr><td style="text-align:center;"><code>\\w</code></td><td style="text-align:center;">匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’</td></tr><tr><td style="text-align:center;"><code>\\W</code></td><td style="text-align:center;">匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]‘</td></tr></tbody></table><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,76),d={href:"https://codejiaonang.com/#/course/regex_chapter1/0/0",target:"_blank",rel:"noopener noreferrer"},u={href:"https://regexr-cn.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://juejin.cn/post/6844903845227659271",target:"_blank",rel:"noopener noreferrer"};function m(k,g){const s=c("ExternalLinkIcon");return o(),p("div",null,[r,n("p",null,[n("a",d,[a("编程胶囊"),e(s)]),n("a",u,[a("Regexp playground"),e(s)]),n("a",v,[a("正则表达式不用背"),e(s)])])])}const x=t(i,[["render",m],["__file","index.html.vue"]]);export{x as default};
